{"ast":null,"code":"class ChessPiece {\n  constructor(name, isAttacked, color, id) {\n    this.name = name; // string\n\n    this.isAttacked = isAttacked; // boolean\n\n    this.color = color; // string\n\n    this.id = id; // string\n  }\n\n  setSquare(newSquare) {\n    // set the square this piece is sitting top of. \n    // on any given piece (on the board), there will always be a piece on top of it. \n    // console.log(newSquare)\n    if (newSquare === undefined) {\n      this.squareThisPieceIsOn = newSquare;\n      return;\n    }\n\n    if (this.squareThisPieceIsOn === undefined) {\n      this.squareThisPieceIsOn = newSquare;\n      newSquare.setPiece(this);\n    }\n\n    const isNewSquareDifferent = this.squareThisPieceIsOn.x != newSquare.x || this.squareThisPieceIsOn.y != newSquare.y;\n\n    if (isNewSquareDifferent) {\n      // console.log(\"set\")\n      this.squareThisPieceIsOn = newSquare;\n      newSquare.setPiece(this);\n    }\n  }\n\n  getSquare() {\n    return this.squareThisPieceIsOn;\n  }\n\n}\n\nexport default ChessPiece;","map":{"version":3,"sources":["/home/arihant/Documents/Chess-Online/Chess-Frontend/src/chess/model/chesspiece.js"],"names":["ChessPiece","constructor","name","isAttacked","color","id","setSquare","newSquare","undefined","squareThisPieceIsOn","setPiece","isNewSquareDifferent","x","y","getSquare"],"mappings":"AACA,MAAMA,UAAN,CAAiB;AACbC,EAAAA,WAAW,CAACC,IAAD,EAAOC,UAAP,EAAmBC,KAAnB,EAA0BC,EAA1B,EAA8B;AACrC,SAAKH,IAAL,GAAYA,IAAZ,CADqC,CACpB;;AACjB,SAAKC,UAAL,GAAkBA,UAAlB,CAFqC,CAER;;AAC7B,SAAKC,KAAL,GAAaA,KAAb,CAHqC,CAGlB;;AACnB,SAAKC,EAAL,GAAUA,EAAV,CAJqC,CAIxB;AAChB;;AAEDC,EAAAA,SAAS,CAACC,SAAD,EAAY;AACjB;AACA;AACA;AACA,QAAIA,SAAS,KAAKC,SAAlB,EAA6B;AACzB,WAAKC,mBAAL,GAA2BF,SAA3B;AACA;AACH;;AAED,QAAI,KAAKE,mBAAL,KAA6BD,SAAjC,EAA4C;AACxC,WAAKC,mBAAL,GAA2BF,SAA3B;AACAA,MAAAA,SAAS,CAACG,QAAV,CAAmB,IAAnB;AACH;;AAED,UAAMC,oBAAoB,GAAG,KAAKF,mBAAL,CAAyBG,CAAzB,IAA8BL,SAAS,CAACK,CAAxC,IAA6C,KAAKH,mBAAL,CAAyBI,CAAzB,IAA8BN,SAAS,CAACM,CAAlH;;AAEA,QAAIF,oBAAJ,EAA0B;AACtB;AACA,WAAKF,mBAAL,GAA2BF,SAA3B;AACAA,MAAAA,SAAS,CAACG,QAAV,CAAmB,IAAnB;AACH;AACJ;;AAEDI,EAAAA,SAAS,GAAG;AACR,WAAO,KAAKL,mBAAZ;AACH;;AAjCY;;AAqCjB,eAAeT,UAAf","sourcesContent":["\nclass ChessPiece {\n    constructor(name, isAttacked, color, id) {\n        this.name = name // string\n        this.isAttacked = isAttacked // boolean\n        this.color = color // string\n        this.id = id // string\n    }\n\n    setSquare(newSquare) {\n        // set the square this piece is sitting top of. \n        // on any given piece (on the board), there will always be a piece on top of it. \n        // console.log(newSquare)\n        if (newSquare === undefined) {\n            this.squareThisPieceIsOn = newSquare\n            return \n        }\n\n        if (this.squareThisPieceIsOn === undefined) {\n            this.squareThisPieceIsOn = newSquare\n            newSquare.setPiece(this)\n        }\n\n        const isNewSquareDifferent = this.squareThisPieceIsOn.x != newSquare.x || this.squareThisPieceIsOn.y != newSquare.y\n\n        if (isNewSquareDifferent) {\n            // console.log(\"set\")\n            this.squareThisPieceIsOn = newSquare\n            newSquare.setPiece(this)\n        }\n    }\n\n    getSquare() {\n        return this.squareThisPieceIsOn\n    }\n}\n\n\nexport default ChessPiece"]},"metadata":{},"sourceType":"module"}