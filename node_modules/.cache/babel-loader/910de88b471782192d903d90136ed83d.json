{"ast":null,"code":"var _jsxFileName = \"/home/arihant/Documents/Chess-Online-Frontend/src/chess/ui/piece.js\";\nimport React from 'react';\nimport { Image } from 'react-konva';\nimport useImage from 'use-image';\n\nconst Piece = props => {\n  const choiceOfColor = props.isWhite ? 0 : 1;\n  const [image] = useImage(props.imgurls[choiceOfColor]);\n  const isDragged = props.id === props.draggedPieceTargetId;\n  const canThisPieceEvenBeMovedByThisPlayer = props.isWhite === props.thisPlayersColorIsWhite;\n  const isItThatPlayersTurn = props.playerTurnToMoveIsWhite === props.thisPlayersColorIsWhite;\n  const thisWhiteKingInCheck = props.id === \"wk1\" && props.whiteKingInCheck;\n  const thisBlackKingInCheck = props.id === \"bk1\" && props.blackKingInCheck; // console.log(\"this piece ID:\" + props.thisPieceTargetId)\n  // console.log(\"dragged piece ID:\" + props.draggedPieceTargetId)\n\n  return /*#__PURE__*/React.createElement(Image, {\n    image: image,\n    x: props.x - 90,\n    y: props.y - 90,\n    draggable: canThisPieceEvenBeMovedByThisPlayer && isItThatPlayersTurn,\n    width: isDragged ? 75 : 60,\n    height: isDragged ? 75 : 60,\n    onDragStart: props.onDragStart,\n    onDragEnd: props.onDragEnd,\n    fill: thisWhiteKingInCheck && \"red\" || thisBlackKingInCheck && \"red\",\n    id: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }\n  });\n};\n\nexport default Piece;","map":{"version":3,"sources":["/home/arihant/Documents/Chess-Online-Frontend/src/chess/ui/piece.js"],"names":["React","Image","useImage","Piece","props","choiceOfColor","isWhite","image","imgurls","isDragged","id","draggedPieceTargetId","canThisPieceEvenBeMovedByThisPlayer","thisPlayersColorIsWhite","isItThatPlayersTurn","playerTurnToMoveIsWhite","thisWhiteKingInCheck","whiteKingInCheck","thisBlackKingInCheck","blackKingInCheck","x","y","onDragStart","onDragEnd"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAMC,aAAa,GAAGD,KAAK,CAACE,OAAN,GAAgB,CAAhB,GAAoB,CAA1C;AACA,QAAM,CAACC,KAAD,IAAUL,QAAQ,CAACE,KAAK,CAACI,OAAN,CAAcH,aAAd,CAAD,CAAxB;AACA,QAAMI,SAAS,GAAGL,KAAK,CAACM,EAAN,KAAaN,KAAK,CAACO,oBAArC;AAEA,QAAMC,mCAAmC,GAAGR,KAAK,CAACE,OAAN,KAAkBF,KAAK,CAACS,uBAApE;AACA,QAAMC,mBAAmB,GAAGV,KAAK,CAACW,uBAAN,KAAkCX,KAAK,CAACS,uBAApE;AAEA,QAAMG,oBAAoB,GAAGZ,KAAK,CAACM,EAAN,KAAa,KAAb,IAAsBN,KAAK,CAACa,gBAAzD;AACA,QAAMC,oBAAoB,GAAGd,KAAK,CAACM,EAAN,KAAa,KAAb,IAAsBN,KAAK,CAACe,gBAAzD,CATqB,CAYrB;AACA;;AACA,sBAAO,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEZ,KAAd;AACF,IAAA,CAAC,EAAIH,KAAK,CAACgB,CAAN,GAAU,EADb;AAEF,IAAA,CAAC,EAAIhB,KAAK,CAACiB,CAAN,GAAU,EAFb;AAGF,IAAA,SAAS,EAAIT,mCAAmC,IAAIE,mBAHlD;AAIF,IAAA,KAAK,EAAIL,SAAS,GAAG,EAAH,GAAQ,EAJxB;AAKF,IAAA,MAAM,EAAIA,SAAS,GAAG,EAAH,GAAQ,EALzB;AAMF,IAAA,WAAW,EAAIL,KAAK,CAACkB,WANnB;AAOF,IAAA,SAAS,EAAIlB,KAAK,CAACmB,SAPjB;AAQF,IAAA,IAAI,EAAKP,oBAAoB,IAAI,KAAzB,IAAoCE,oBAAoB,IAAI,KARlE;AASF,IAAA,EAAE,EAAId,KAAK,CAACM,EATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAWH,CAzBD;;AA2BA,eAAeP,KAAf","sourcesContent":["import React from 'react'\nimport { Image } from 'react-konva';\nimport useImage from 'use-image'\n\nconst Piece = (props) => {\n    const choiceOfColor = props.isWhite ? 0 : 1\n    const [image] = useImage(props.imgurls[choiceOfColor]);\n    const isDragged = props.id === props.draggedPieceTargetId\n\n    const canThisPieceEvenBeMovedByThisPlayer = props.isWhite === props.thisPlayersColorIsWhite\n    const isItThatPlayersTurn = props.playerTurnToMoveIsWhite === props.thisPlayersColorIsWhite\n\n    const thisWhiteKingInCheck = props.id === \"wk1\" && props.whiteKingInCheck\n    const thisBlackKingInCheck = props.id === \"bk1\" && props.blackKingInCheck\n\n\n    // console.log(\"this piece ID:\" + props.thisPieceTargetId)\n    // console.log(\"dragged piece ID:\" + props.draggedPieceTargetId)\n    return <Image image={image}\n         x = {props.x - 90}\n         y = {props.y - 90}\n         draggable = {canThisPieceEvenBeMovedByThisPlayer && isItThatPlayersTurn}\n         width = {isDragged ? 75 : 60}\n         height = {isDragged ? 75 : 60}\n         onDragStart = {props.onDragStart}\n         onDragEnd = {props.onDragEnd}\n         fill = {(thisWhiteKingInCheck && \"red\") || (thisBlackKingInCheck && \"red\")}\n         id = {props.id}\n         />;\n};\n\nexport default Piece"]},"metadata":{},"sourceType":"module"}