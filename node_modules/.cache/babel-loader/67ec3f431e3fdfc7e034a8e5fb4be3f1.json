{"ast":null,"code":"var _jsxFileName = \"/home/arihant/Documents/Chess-Online/Chess-Frontend/src/onboard/onboard.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport uuid from 'uuid/v4';\nimport { ColorContext } from '../context/colorcontext';\nimport HomeIntro from '../che';\n\nconst socket = require('../connection/socket').socket;\n/**\n * Onboard is where we create the game room.\n */\n\n\nclass CreateNewGame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      didGetUserName: false,\n      inputText: \"\",\n      gameId: \"\"\n    };\n\n    this.send = () => {\n      /**\n       * This method should create a new room in the '/' namespace\n       * with a unique identifier. \n       */\n      const newGameRoomId = uuid(); // set the state of this component with the gameId so that we can\n      // redirect the user to that URL later. \n\n      this.setState({\n        gameId: newGameRoomId\n      }); // emit an event to the server to create a new room \n\n      socket.emit('createNewGame', newGameRoomId);\n    };\n\n    this.typingUserName = () => {\n      // grab the input text from the field from the DOM \n      const typedText = this.textArea.current.value; // set the state with that text\n\n      this.setState({\n        inputText: typedText\n      });\n    };\n\n    this.textArea = React.createRef();\n  }\n\n  render() {\n    // !!! TODO: edit this later once you have bought your own domain. \n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, this.state.didGetUserName ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/game/\" + this.state.gameId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      style: {\n        marginLeft: String(window.innerWidth / 2 - 60) + \"px\",\n        width: \"120px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 63\n      }\n    }, \"Start Game\")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: {\n        HomeIntro\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: String(window.innerHeight / 5) + \"px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, \"Your Username:\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        marginLeft: String(window.innerWidth / 2 - 120) + \"px\",\n        width: \"240px\",\n        marginTop: \"62px\"\n      },\n      ref: this.textArea,\n      onInput: this.typingUserName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      style: {\n        marginLeft: String(window.innerWidth / 2 - 60) + \"px\",\n        width: \"120px\",\n        marginTop: \"62px\"\n      },\n      disabled: !(this.state.inputText.length > 0),\n      onClick: () => {\n        // When the 'Submit' button gets pressed from the username screen,\n        // We should send a request to the server to create a new room with\n        // the uuid we generate here.\n        this.props.didRedirect();\n        this.props.setUserName(this.state.inputText);\n        this.setState({\n          didGetUserName: true\n        });\n        this.send();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nconst Onboard = props => {\n  const color = React.useContext(ColorContext);\n  return /*#__PURE__*/React.createElement(CreateNewGame, {\n    didRedirect: color.playerDidRedirect,\n    setUserName: props.setUserName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 12\n    }\n  });\n};\n\nexport default Onboard;","map":{"version":3,"sources":["/home/arihant/Documents/Chess-Online/Chess-Frontend/src/onboard/onboard.js"],"names":["React","Redirect","uuid","ColorContext","HomeIntro","socket","require","CreateNewGame","Component","constructor","props","state","didGetUserName","inputText","gameId","send","newGameRoomId","setState","emit","typingUserName","typedText","textArea","current","value","createRef","render","marginLeft","String","window","innerWidth","width","textAlign","marginTop","innerHeight","length","didRedirect","setUserName","Onboard","color","useContext","playerDidRedirect"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport uuid from 'uuid/v4'\nimport { ColorContext } from '../context/colorcontext' \nimport HomeIntro from '../che'\nconst socket  = require('../connection/socket').socket\n\n/**\n * Onboard is where we create the game room.\n */\n\nclass CreateNewGame extends React.Component {\n    state = {\n        didGetUserName: false,\n        inputText: \"\",\n        gameId: \"\"\n    }\n\n    constructor(props) {\n        super(props);\n        this.textArea = React.createRef();\n    }\n    \n    send = () => {\n        /**\n         * This method should create a new room in the '/' namespace\n         * with a unique identifier. \n         */\n        const newGameRoomId = uuid()\n\n        // set the state of this component with the gameId so that we can\n        // redirect the user to that URL later. \n        this.setState({\n            gameId: newGameRoomId\n        })\n\n        // emit an event to the server to create a new room \n        socket.emit('createNewGame', newGameRoomId)\n    }\n\n    typingUserName = () => {\n        // grab the input text from the field from the DOM \n        const typedText = this.textArea.current.value\n        \n        // set the state with that text\n        this.setState({\n            inputText: typedText\n        })\n    }\n\n    render() {\n        // !!! TODO: edit this later once you have bought your own domain. \n\n        return (<React.Fragment>\n            {\n                this.state.didGetUserName ? \n\n                <Redirect to = {\"/game/\" + this.state.gameId}><button className=\"btn btn-success\" style = {{marginLeft: String((window.innerWidth / 2) - 60) + \"px\", width: \"120px\"}}>Start Game</button></Redirect>\n\n            :\n               <div>\n\n                    <img src = {{HomeIntro}}/>\n                    \n                    <h3 style={{textAlign: \"center\", marginTop: String((window.innerHeight / 5)) + \"px\"}}>Your Username:</h3>\n\n                    <input style={{marginLeft: String((window.innerWidth / 2) - 120) + \"px\", width: \"240px\", marginTop: \"62px\"}} \n                           ref = {this.textArea}\n                           onInput = {this.typingUserName}></input>\n                           \n                    <button className=\"btn btn-primary\" \n                        style = {{marginLeft: String((window.innerWidth / 2) - 60) + \"px\", width: \"120px\", marginTop: \"62px\"}} \n                        disabled = {!(this.state.inputText.length > 0)} \n                        onClick = {() => {\n                            // When the 'Submit' button gets pressed from the username screen,\n                            // We should send a request to the server to create a new room with\n                            // the uuid we generate here.\n                            this.props.didRedirect() \n                            this.props.setUserName(this.state.inputText) \n                            this.setState({\n                                didGetUserName: true\n                            })\n                            this.send()\n                        }}>Submit</button>\n                </div>\n            }\n            </React.Fragment>)\n    }\n}\n\nconst Onboard = (props) => {\n    const color = React.useContext(ColorContext)\n\n    return <CreateNewGame didRedirect = {color.playerDidRedirect} setUserName = {props.setUserName}/>\n}\n\n\nexport default Onboard"]},"metadata":{},"sourceType":"module"}